apiVersion: apps/v1
kind: Deployment
metadata:
  name: kv-sidecar
  labels:
    app: kv-sidecar
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kv-sidecar
  template:
    metadata:
      labels:
        app: kv-sidecar
    spec:
      volumes:
      - name: secrets
        emptyDir: {}
      - name: vault-tls
        secret:
          secretName: ujet-vault-tls-secret
      - name: vault-token
        emptyDir:
          medium: Memory
      initContainers:
      # The vault-authenticator container authenticates the container using the
      # kubernetes auth method and puts the resulting token on the filesystem.
      - name: vault-authenticator
        image: sethvargo/vault-kubernetes-authenticator:0.2.0
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: vault-token
          mountPath: /var/run/secrets/vaultproject.io
        - name: vault-tls
          mountPath: /etc/vault/tls
        env:
        - name: VAULT_ADDR
          valueFrom:
            configMapKeyRef:
              name: vault
              key: vault_addr
        - name: VAULT_CACERT
          value: /etc/vault/tls/ca.pem
        - name: VAULT_ROLE
          value: myapp-role

      containers:
        # The consul-template container will pull secrets from Vault and expose
        # them as files on disk.
      - name: consul-template
        image: hashicorp/consul-template:0.20.0-light
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: secrets
          mountPath: /etc/secrets
        - name: vault-tls
          mountPath: /etc/vault/tls
        - name: vault-token
          mountPath: /var/run/secrets/vaultproject.io
        env:
        - name: VAULT_ADDR
          valueFrom:
            configMapKeyRef:
              name: vault
              key: vault_addr
        - name: VAULT_CACERT
          value: /etc/vault/tls/ca.pem
        - name: CT_LOCAL_CONFIG
          value: |
            vault {
              vault_agent_token_file = "/var/run/secrets/vaultproject.io/.vault-token"

              ssl {
                ca_cert = "/etc/vault/tls/ca.pem"
              }

              retry {
                backoff = "1s"
              }
            }

            template {
              destination = "/etc/secrets/index.html"
              contents = <<EOT
              <html>
              <body>
              <p>Some secrets:</p>
              {{- with secret "kv/myapp/config" }}
              <ul>
              <li><pre>username: {{ .Data.username }}</pre></li>
              <li><pre>password: {{ .Data.password }}</pre></li>
              </ul>
              {{ end }}
              </body>
              </html>
              EOT
              }

      - name: app
        image: nginx
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: secrets
          mountPath: /usr/share/nginx/html
---
apiVersion: v1
kind: Service
metadata:
  name: kv-sidecar
spec:
  selector:
    app: kv-sidecar
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP

